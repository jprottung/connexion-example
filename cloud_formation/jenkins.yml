AWSTemplateFormatVersion: "2010-09-09"
Description: >
  AWS CloudFormation template to create ALB + jenkins server
Parameters:
  Environment:
    Description: Environment for Naming
    Type: String
    Default: dev
    ConstraintDescription: Must be a string.
  AmiId:
    Type: String
    Description: Specifies the AMI ID, using newest linux for us-east-1
    Default: ami-0ff8a91507f77f867
  InstanceType:
    Type: String
    Description: >
      Specifies the EC2 instance type for jenkins, which is memory intensive usually
      Defaults to m4.large
    Default: m5.large
    ConstraintDescription: must be a valid EC2 instance type.
  BucketName:
    Type: String
    Description: Name of s3 Backup bucket to load your jenkins content
    Default: my-jenkins-backup

Resources:
  JenkinsRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"

  JenkinsRolePolicies:
    Type: "AWS::IAM::Policy"
    DependsOn: "JenkinsRole"
    Properties:
      PolicyName: "jenkins"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: S3Access
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:GetBucketLocation
              - s3:DeleteObject
              - s3:PutObjectAcl
              - s3:ListBucket
            Effect: Allow
            Resource:
              - !Sub "arn:aws:s3:::${BucketName}"
              - !Sub "arn:aws:s3:::${BucketName}/*"
      Roles:
        - Ref: "JenkinsRole"

  JenkinsInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    DependsOn: "JenkinsRole"
    Properties:
      Path: "/"
      Roles:
        - Ref: "JenkinsRole"

  JenkinsSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to jenkins
      VpcId:
        Fn::ImportValue: !Sub ${Environment}-VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 8080
          CidrIpv6: ::/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIpv6: ::/0

  Jenkins:
    Type: AWS::EC2::Instance
    Properties:
      Tags:
        - Key: stack
          Value: !Ref Environment
        - Key: app
          Value: jenkins
      SubnetId:
        Fn::ImportValue: !Sub ${Environment}-PUB1-SN
      KeyName: "Laptop"
      ImageId: !Ref AmiId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref JenkinsInstanceProfile
      SecurityGroupIds:
        - !Ref JenkinsSecGroup
      UserData: !Base64
        Fn::Join:
          - ""
          - - |
              #!/bin/bash -xe
            - |
              # Install Docker and Jenkins
            - |
              apt-get update
            - |
              apt install -y default-jdk
            - |
              wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | apt-key add -
            - |
              sh -c 'echo deb https://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
            - |
              apt-get update --allow-insecure-repositories
            - |
              apt install jenkins -y --allow-unauthenticated
            - |
              systemctl start jenkins
            - |
              systemctl enable jenkins
            - |
              systemctl status jenkins
            - !Sub "echo '*/5 * * * * aws s3 sync /var/jenkins_home s3://${BucketName}' > /tmp/backup.txt\n"
            # - !Sub "aws s3 sync s3://${BucketName}/ /var/jenkins_home\n"
            - |
              crontab /tmp/backup.txt
            - |+

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub ${Environment}-PUB1-SN
        - Fn::ImportValue: !Sub ${Environment}-PUB2-SN
      # Scheme: internal
      SecurityGroups:
        - !Ref JenkinsSecGroup

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: TargetGroup
      LoadBalancerArn:
        Ref: LoadBalancer
      Port: "80"
      Protocol: HTTP

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn:
            Ref: TargetGroup
      Conditions:
        - Field: path-pattern
          Values:
            - "/"
      ListenerArn:
        Ref: Listener
      Priority: 1

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 4
      Matcher:
        HttpCode: "200"
      Name: Jenkins
      Port: 80
      Protocol: HTTP
      Targets:
        - Id:
            Ref: Jenkins
          Port: 80
      UnhealthyThresholdCount: 3
      VpcId:
        Fn::ImportValue: !Sub ${Environment}-VPCID

  # Only for first run to create
  # JenkinsBackUpBucket:
  #   Type: "AWS::S3::Bucket"
  #   Properties:
  #     BucketName: !Ref BucketName
  #     Tags:
  #       - Key: stack
  #         Value: !Ref Environment
  #       - Key: app
  #         Value: jenkins
  #   DeletionPolicy: Retain

Outputs:
  WebsiteURL:
    Value: !Join ["", ["http://", !GetAtt "Jenkins.PublicDnsName"]]
    Description: Jenkins Website
